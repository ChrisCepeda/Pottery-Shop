import express from "express";
import mongodb from "mongodb";
import cors from "cors";

//configuring the Mongoclient ti talk to our local MongoDB
const mongoClient = new mongodb.MongoClient('mongodb://localhost:27017');

//Connecting the client to the database
mongoClient.connect();

//Grabbing the 

const db= mongoClient.db('potteryshop');
const collection = db.collection("pottery");


const PORT = 4649;

const app = express();

app.use(
    cors({
        origin: "http://localhost:3000",
    })
);

app.use(express.json());

const requestLogger = (request, response, next) => {
    const timestamp = new Date().toISOString();
    
   console.log(`${timestamp}`);
    next();
};
app.use(requestLogger);

//DELETE 
app.delete('/pottery/:potteryId', async (req, res) => {
    const theSelectPotteryId = req.params.potteryId;
    console.log(theSelectPotteryId);
    res.status(200).end();

   //When working with autogenerated ID 
    //await collection.deleteOne({ _id: new mongodb.ObjectId(theSelectPotteryCoursesId) });

    //When working with our own ID
    await collection.deleteOne({ _id: theSelectId});

});

//REPLACE or ADD
app.patch('/pottery/:potteryId', async (req, res) => {
    const theSelectPotteryId = req.params.potteryId;
    const requestBody = req.body;

    await collection.updateOne({ _id: theSelectPotteryId}, {$set:requestBody});

    res.status(200).end();

});

// GET DATA
app.get("/pottery", async (request, response) => {
    const pottery = await collection.find({}).toArray();

    const query = request.query;
    console.log("query", query);

    let filter = {};
    if(query.containsitem) {
        filter.containscourse = query.containscourse ==="true";
    }

    if (query.beginners) {
        filter.beginners = { $regex:new RegExp(query.evenings, "i")};
    }
   
    response.json(pottery);
});


app.get("/pottery/:productId", async (request, response) => {
    const productId = request.params.productId;
  
    const product = await collection.findOne({ _id: productId });
  
    if (product) {
      response.json(product);
    } else {
      response.sendStatus(404);
    }
  });

app.post('/pottery', async (request, response) =>{
    const potteryPic = request.body;

    await collection.insertOne(potteryPic);

     
    console.log("Got requestBody", potteryPic);

    response.status(200).end();
});

app.listen(PORT, () => {
    console.log(`potteryshop @ http://localhost:${PORT}`);
});
